"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const monthCalculator = require('../src/controllers/historyCalculator/monthCalculator');
describe('calculatePerMonth', () => {
    it('should return end and start date from last month to 20 years ago', () => __awaiter(void 0, void 0, void 0, function* () {
        const input = {
            "time": [
                "2022-07-01", "2022-07-02", "2022-07-03", "2022-07-04", "2022-07-05", "2022-07-06", "2022-07-07", "2022-07-08", "2022-07-09", "2022-07-10", "2022-07-11", "2022-07-12", "2022-07-13", "2022-07-14", "2022-07-15",
                "2022-07-16", "2022-07-17", "2022-07-18", "2022-07-19", "2022-07-20", "2022-07-21", "2022-07-22", "2022-07-23", "2022-07-24", "2022-07-25", "2022-07-26", "2022-07-27", "2022-07-28", "2022-07-29", "2022-07-30",
                "2022-07-31", "2022-08-01", "2022-08-02", "2022-08-03", "2022-08-04", "2022-08-05", "2022-08-06", "2022-08-07", "2022-08-08", "2022-08-09", "2022-08-10", "2022-08-11", "2022-08-12", "2022-08-13", "2022-08-14",
                "2022-08-15", "2022-08-16", "2022-08-17", "2022-08-18", "2022-08-19", "2022-08-20", "2022-08-21", "2022-08-22", "2022-08-23", "2022-08-24", "2022-08-25", "2022-08-26", "2022-08-27", "2022-08-28", "2022-08-29",
                "2022-08-30", "2022-08-31", "2022-09-01", "2022-09-02", "2022-09-03", "2022-09-04", "2022-09-05", "2022-09-06", "2022-09-07", "2022-09-08", "2022-09-09", "2022-09-10", "2022-09-11", "2022-09-12", "2022-09-13",
                "2022-09-14", "2022-09-15", "2022-09-16", "2022-09-17", "2022-09-18", "2022-09-19", "2022-09-20", "2022-09-21", "2022-09-22", "2022-09-23", "2022-09-24", "2022-09-25", "2022-09-26", "2022-09-27", "2022-09-28",
                "2022-09-29", "2022-09-30", "2022-10-01", "2022-10-02", "2022-10-03", "2022-10-04", "2022-10-05", "2022-10-06", "2022-10-07", "2022-10-08", "2022-10-09", "2022-10-10", "2022-10-11", "2022-10-12", "2022-10-13",
                "2022-10-14", "2022-10-15", "2022-10-16", "2022-10-17", "2022-10-18", "2022-10-19", "2022-10-20", "2022-10-21", "2022-10-22", "2022-10-23", "2022-10-24", "2022-10-25", "2022-10-26", "2022-10-27", "2022-10-28",
                "2022-10-29", "2022-10-30", "2022-10-31", "2022-11-01", "2022-11-02", "2022-11-03", "2022-11-04", "2022-11-05", "2022-11-06", "2022-11-07", "2022-11-08", "2022-11-09", "2022-11-10", "2022-11-11", "2022-11-12",
                "2022-11-13", "2022-11-14", "2022-11-15", "2022-11-16", "2022-11-17", "2022-11-18", "2022-11-19", "2022-11-20", "2022-11-21", "2022-11-22", "2022-11-23", "2022-11-24", "2022-11-25", "2022-11-26", "2022-11-27",
                "2022-11-28", "2022-11-29", "2022-11-30", "2022-12-01", "2022-12-02", "2022-12-03", "2022-12-04", "2022-12-05", "2022-12-06", "2022-12-07", "2022-12-08", "2022-12-09", "2022-12-10", "2022-12-11", "2022-12-12",
                "2022-12-13", "2022-12-14", "2022-12-15", "2022-12-16", "2022-12-17", "2022-12-18", "2022-12-19", "2022-12-20", "2022-12-21", "2022-12-22", "2022-12-23", "2022-12-24", "2022-12-25", "2022-12-26", "2022-12-27",
                "2022-12-28", "2022-12-29", "2022-12-30", "2022-12-31", "2023-01-01", "2023-01-02", "2023-01-03", "2023-01-04", "2023-01-05", "2023-01-06", "2023-01-07", "2023-01-08", "2023-01-09", "2023-01-10", "2023-01-11",
                "2023-01-12", "2023-01-13", "2023-01-14", "2023-01-15", "2023-01-16", "2023-01-17", "2023-01-18", "2023-01-19", "2023-01-20", "2023-01-21", "2023-01-22", "2023-01-23", "2023-01-24", "2023-01-25", "2023-01-26",
                "2023-01-27", "2023-01-28", "2023-01-29", "2023-01-30", "2023-01-31", "2023-02-01", "2023-02-02", "2023-02-03", "2023-02-04", "2023-02-05", "2023-02-06", "2023-02-07", "2023-02-08", "2023-02-09", "2023-02-10",
                "2023-02-11", "2023-02-12", "2023-02-13", "2023-02-14", "2023-02-15", "2023-02-16", "2023-02-17", "2023-02-18", "2023-02-19", "2023-02-20", "2023-02-21", "2023-02-22", "2023-02-23", "2023-02-24", "2023-02-25",
                "2023-02-26", "2023-02-27", "2023-02-28", "2023-03-01", "2023-03-02", "2023-03-03", "2023-03-04", "2023-03-05", "2023-03-06", "2023-03-07", "2023-03-08", "2023-03-09", "2023-03-10", "2023-03-11", "2023-03-12",
                "2023-03-13", "2023-03-14", "2023-03-15", "2023-03-16", "2023-03-17", "2023-03-18", "2023-03-19", "2023-03-20", "2023-03-21", "2023-03-22", "2023-03-23", "2023-03-24", "2023-03-25", "2023-03-26", "2023-03-27",
                "2023-03-28", "2023-03-29", "2023-03-30", "2023-03-31", "2023-04-01", "2023-04-02", "2023-04-03", "2023-04-04", "2023-04-05", "2023-04-06", "2023-04-07", "2023-04-08", "2023-04-09", "2023-04-10", "2023-04-11",
                "2023-04-12", "2023-04-13", "2023-04-14", "2023-04-15", "2023-04-16", "2023-04-17", "2023-04-18", "2023-04-19", "2023-04-20", "2023-04-21", "2023-04-22", "2023-04-23", "2023-04-24", "2023-04-25", "2023-04-26",
                "2023-04-27", "2023-04-28", "2023-04-29", "2023-04-30", "2023-05-01", "2023-05-02", "2023-05-03", "2023-05-04", "2023-05-05", "2023-05-06", "2023-05-07", "2023-05-08", "2023-05-09", "2023-05-10", "2023-05-11",
                "2023-05-12", "2023-05-13", "2023-05-14", "2023-05-15", "2023-05-16", "2023-05-17", "2023-05-18", "2023-05-19", "2023-05-20", "2023-05-21", "2023-05-22", "2023-05-23", "2023-05-24", "2023-05-25", "2023-05-26",
                "2023-05-27", "2023-05-28", "2023-05-29", "2023-05-30", "2023-05-31", "2023-06-01", "2023-06-02", "2023-06-03", "2023-06-04", "2023-06-05", "2023-06-06", "2023-06-07", "2023-06-08", "2023-06-09", "2023-06-10",
                "2023-06-11", "2023-06-12", "2023-06-13", "2023-06-14", "2023-06-15", "2023-06-16", "2023-06-17", "2023-06-18", "2023-06-19", "2023-06-20", "2023-06-21", "2023-06-22", "2023-06-23", "2023-06-24", "2023-06-25",
                "2023-06-26", "2023-06-27", "2023-06-28", "2023-06-29", "2023-06-30"
            ],
            temperature_2m_mean: [
                16.2, 17.6, 16.8, 16.8, 16, 16.5, 16.2, 17.1, 16.9, 16.8, 17.8, 20.3, 19.8, 16.8, 16.9, 16.7, 18.6, 22.5, 27.1, 23.1, 18.4, 17.3, 18.4, 22.2, 20.3, 17, 16.5, 16.9, 18.1, 18.8, 19.2, 18.2, 20.3, 22, 20.8, 17.3, 16.7,
                17.5, 18, 19.1, 21.2, 23.3, 24.4, 24.6, 25.5, 21.5, 21, 19.4, 19.9, 19.7, 18.8, 18.1, 19.6, 21.1, 21.8, 23.1, 19.1, 17.9, 17.3, 17.4, 18.2, 18.3, 18.5, 19.4, 20.7, 20.4, 21.7, 20.5, 19, 17.5, 16.3, 16.8, 17.5, 18.4,
                17.9, 16, 15.2, 12.7, 12.8, 11.8, 14, 13.8, 13.1, 12.7, 13.7, 13.8, 12.8, 12.1, 10.3, 10.9, 10.5, 12, 14.4, 14.2, 13.6, 14, 16.1, 13.9, 14.2, 12.8, 11.4, 11.9, 11.5, 10.4, 12.3, 12.3, 13.9, 14.2, 15.3, 13, 11.1,
                12.7, 15.4, 14.2, 14.6, 15.1, 13.7, 14.7, 15.9, 16.4, 15.7, 15.1, 13.7, 14.2, 12.4, 12.8, 10.2, 10.1, 10.7, 12.2, 13, 11.9, 12.4, 10.9, 9.3, 9.1, 6.8, 10.1, 10, 9.9, 7.6, 1.1, 0.2, 4.8, 6.4, 8.1, 9, 9.2,
                7.8, 7.1, 8.5, 7.9, 6, 4.9, 2.8, 1.6, 1.3, 5.1, 5.5, 4.9, 3.2, -0.7, 0.8, 0.7, -1.1, -2.5, -2.6, 0.4, 0.3, -2.1, -1.7, 7, 9.3, 6.5, 7.7, 8.1, 8.3, 7.6, 7.3, 6.2, 8.9, 8.7, 8.4, 12.7, 11.5,
                8.5, 6.4, 10.7, 9.7, 9.7, 10, 8.2, 6.7, 7.1, 9.2, 10, 8.2, 8.1, 6.1, 3.8, 2.5, 2.7, 3.1, 1.2, 0.6, 1.6, 2.4, 1.7, 0.9, 4.8, 3.4, 2.7, 4.8, 6.8, 6.6, 6.8, 7.8, 8.4, 7.1, 6.3, 4, 1.1,
                0.5, 2.9, 4.9, 7.1, 6.8, 6.5, 4.9, 4.5, 7.7, 9.3, 9.2, 7.4, 8.2, 8.4, 7, 6.4, 5.3, 4.6, 3, 3, 2.7, 1.8, 2, 4.1, 5.5, 4, 3.7, 2.9, 1.1, 1.6, 1.4, 2.4, 5.6, 11, 6.4, 4.7, 7.8,
                10.7, 10.5, 8.7, 7.8, 9.7, 9.9, 11.3, 10.4, 8.8, 6.4, 5, 4.7, 9.8, 11.3, 10, 8.7, 5.8, 5, 4.7, 5.1, 6.2, 8.2, 8.6, 10, 10.4, 8.9, 8.4, 8, 8.8, 8.4, 8.5, 9.5, 9.2, 9.5, 8.4, 10.9, 9,
                11, 8.4, 6.7, 6.5, 7.7, 9.3, 9.5, 10.6, 11.2, 8.5, 8.6, 12.7, 13.5, 14, 15.1, 13.7, 13.2, 12, 12.5, 15.1, 15, 12.8, 10.7, 10.3, 10, 9.8, 12.3, 14.2, 15.2, 15.9, 11.7, 11.8, 12.1, 11.6, 13.5, 14.4, 11.9,
                12.6, 14.3, 12, 13.6, 15.9, 14.5, 13.4, 14.2, 14.4, 15.7, 20.1, 21.9, 23.6, 23.3, 21.3, 20.4, 19.8, 18.8, 18.9, 20.6, 19.4, 21.6, 19, 18.7, 19.1, 19.9, 23.5, 18.6, 17.5, 18.3, 18, 17
            ],
            precipitation_sum: [
                1.7, 0.1, 1.2, 0.5, 0.2, 0.8, 0.9, 0, 0.3, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, 1.3, 11.8, 0.4, 0, 0, 1.3, 0.5, 0.2, 0, 1, 0, 3.3, 0.1, 0, 0, 0.1, 1.3, 0,
                0, 0.4, 0, 0, 0, 0, 0, 0, 11.1, 3.8, 20.5, 0, 2.4, 0.2, 0.6, 0, 0.2, 0, 2.1, 0.7, 0.3, 0, 0, 0, 0, 0, 0, 0, 0, 1.2, 1.2, 7.9, 6.4, 3.5, 2.2, 0.3, 0.6,
                0.1, 1, 0.5, 8.4, 3.4, 11.3, 0.8, 0.2, 0, 0, 2.7, 3.9, 0.7, 8.1, 6.2, 3, 0, 3.1, 9.5, 0.6, 0.3, 0, 0.8, 0, 0.5, 2.4, 0, 1.3, 0.4, 0, 7.3, 2.4, 1.6, 1.2, 2.2, 0, 0,
                7.1, 0.6, 2.7, 4.9, 0.8, 1.8, 0.2, 2.5, 0, 1.8, 0.8, 0, 1.2, 0.3, 8.1, 5.8, 1.1, 10.1, 5.8, 0.9, 2.6, 0, 0, 0, 0, 0, 5.3, 6, 15.6, 2.2, 0.7, 3.4, 5.1, 1.5, 3.2, 0.9, 7.4,
                0, 10.8, 1.8, 0, 0, 0, 0, 0, 0.1, 1.2, 0.8, 1, 4, 0, 0, 0, 0, 0, 0, 0.4, 0, 0, 2.7, 5.3, 6.5, 1.8, 4.3, 11.2, 0.4, 4.4, 1.8, 1.6, 5, 6.1, 3.2, 13.7, 4.1,
                3, 0.9, 5.8, 1.4, 1.2, 0.4, 1.5, 4, 6.3, 4.6, 20.4, 0.9, 13.3, 3.1, 11.5, 0.8, 0.8, 1.5, 4.2, 0, 0, 0, 0, 0.8, 3, 0, 0, 0, 1.2, 0.3, 2.4, 2.4, 0, 0.4, 1.1, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0.2, 0, 3.1, 1.9, 0, 0.1, 0.2, 1.8, 3, 0.3, 0, 0, 0.6, 0, 0, 0, 0.4, 1.6, 4.7, 4.5, 3, 9.1, 22.3, 0, 4.3, 4, 3.4, 1.4, 1.2,
                0.3, 4.2, 0.2, 4.4, 3.6, 6.4, 7.6, 8.6, 4.9, 1.7, 0.2, 2.6, 1.3, 4.8, 14.2, 5.4, 0, 0, 0, 0, 4.5, 0.8, 0, 0, 8.8, 1.5, 11.3, 3.8, 0.4, 0, 0.3, 0.7, 0, 0, 1.5, 10.2, 4.1,
                9.6, 10.5, 0.5, 0.8, 0, 2.8, 0, 0, 0.4, 0, 0, 0.3, 8.9, 5.9, 4.6, 0, 16, 2.6, 7, 3.9, 0, 0, 0.7, 0.4, 0, 0, 0, 0, 0.7, 0.9, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 3.1, 1.7, 10.1, 0.1, 8.8, 0, 0, 0, 0.1, 0, 1.3, 1.6, 0.9
            ],
        };
        const result = yield monthCalculator.calculatePerMonth(input);
        const expectedResponse = {
            "2022": {
                "precipitation": {
                    "10": 3.3, "11": 2.4, "6": 0.8, "7": 1.4, "8": 2.6, "9": 1.7,
                },
                "temperature": {
                    "10": 9, "11": 4.1, "6": 18.4, "7": 20, "8": 15.4, "9": 13.8,
                },
            },
            "2023": {
                "precipitation": {
                    "0": 3.1, "1": 0.6, "2": 4, "3": 2.6, "4": 1.7, "5": 0.9,
                },
                "temperature": {
                    "0": 5.8, "1": 5.8, "2": 6.5, "3": 8.3, "4": 12.6, "5": 18.4,
                }
            },
        };
        expect(result).toEqual(expectedResponse);
    }));
});
describe('calculateTempurature', () => {
    it('should return average temperature per month', () => __awaiter(void 0, void 0, void 0, function* () {
        const input = {
            '0': {
                temperature: [7.8, 5.8, 5, 5.7, 7.5, 5.6, 6.9, 7.1, 5, 3.9, 7.2, 7, 8.4, 5.4, 6.4, 6.7, 4.3, 1.6, -0.5, -1.9, -0.3, -0.9, -0.8, -1.4, 0.9, 6.8, 5.7, 4.2, 1.8, 0.7, 0.8],
                precipitation: [0, 0, 0, 0, 0, 0, 0.9, 1.9, 0, 1.3, 0, 2.9, 3.8, 1.1, 0, 4.2, 2.5, 0, 0, 0, 0, 3.2, 0, 0, 1.5, 1, 7.5, 2.6, 0.2, 1.3, 0]
            },
            '1': {
                temperature: [1.3, 1.5, 2.3, 2, 4.7, 5.4, 7.6, 7.4, 7.8, 6.3, 5.5, 5.7, 6.4, 5.3, 6, 6.6, 7.3, 7.1, 6.9, 7.2, 7.5, 9, 7.4, 5.7, 7.1, 7.9, 7.8, 7.9],
                precipitation: [1, 3.7, 0, 2.4, 0, 5.6, 5.2, 3.5, 1, 22.9, 0.3, 0, 0, 0, 0, 0, 0, 0.1, 0.3, 0, 2, 0, 0, 0, 0, 0, 0, 0.5]
            },
            '2': {
                temperature: [6.3, 7.8, 10.4, 8, 6.6, 8.7, 8.4, 7.2, 8, 5.2, 5.2, 5.9, 7.2, 7.5, 8.8, 9, 6.9, 5.7, 5.6, 8.7, 9.1, 8, 7.9, 5.9, 7.2, 7, 7.6, 8.9, 8.6, 9.8, 7.7],
                precipitation: [0.5, 0, 6.5, 10.5, 0.9, 4.5, 15.6, 1.5, 5.9, 14, 0.6, 5.8, 6.4, 10.5, 3.5, 4.5, 5.4, 0.8, 0.2, 0, 0, 0, 0, 0, 0.8, 0.1, 0, 0.2, 0, 0, 0]
            },
            '3': {
                temperature: [6.9, 9.5, 6.8, 6.5, 7.2, 9.5, 13, 12.5, 8.7, 5.8, 5.9, 5.4, 3.9, 5.3, 9, 10.9, 12.1, 14.4, 15.4, 15.6, 14.4, 16.3, 15.6, 16.7, 12.8, 11.9, 10, 9.7, 9.8, 10.3],
                precipitation: [0, 6.8, 2.5, 0, 0, 0.3, 1.2, 0, 0, 0, 0, 0.2, 0.6, 0.2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 6.6, 0.6, 0.5, 4.6, 5.6, 0.7, 0]
            },
            '4': {
                temperature: [9.3, 10.1, 7.9, 7.1, 7.7, 8, 8.9, 9.6, 11.5, 10, 9.2, 9.3, 9.1, 10.3, 11.4, 11.4, 12.2, 13.7, 13.4, 13, 11.7, 12.7, 14.4, 13.9, 12.7, 15.3, 13.7, 11.9, 13, 15.9, 16.2],
                precipitation: [0, 3.3, 1, 0.9, 0.2, 1.6, 0.7, 7.5, 2.3, 1, 0, 0.5, 0, 0, 0, 0.1, 0, 2.4, 0.4, 0, 0, 0, 0, 0, 0, 3.7, 0, 9, 0, 0.1, 0]
            },
            '5': {
                temperature: [17.6, 21.6, 16.2, 18.1, 16.4, 14.2, 16.1, 14.5, 14.9, 16.8, 14.6, 14.1, 14.8, 16.9, 15.9, 16.3, 18.5, 19, 18.3, 16.1, 15.3, 16, 21.3, 24.4, 25, 18.1, 16, 17.4, 22.5, 20],
                precipitation: [0, 0, 0, 13.5, 10.3, 20, 3.4, 6.7, 0.6, 6.6, 1.2, 15.5, 2.2, 0.3, 11.1, 1.4, 0.1, 0, 13.7, 5.9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            },
            '6': {
                temperature: [17.5, 16.5, 15.4, 16, 17.3, 16.3, 14.9, 14.4, 15.1, 15.4, 17.8, 16.8, 16.3, 15.6, 15.5, 15.9, 17.8, 18.3, 18.5, 19.3, 18.3, 19.6, 23.1, 25.2, 27.4, 27.5, 22.6, 20, 19.5, 21.6, 18.4],
                precipitation: [0, 0, 0, 0, 0, 3.1, 0.3, 0.1, 0, 2.4, 2.8, 6.3, 1.4, 0.3, 0, 0, 0, 4, 1.4, 7.8, 0, 0.2, 0, 0, 0, 1.2, 0.9, 3.2, 0, 0, 4.8]
            },
            '7': {
                temperature: [18.3, 18.2, 18.1, 19.3, 20, 19.2, 18.7, 18.6, 20, 19.8, 18.2, 16.5, 14.8, 16.2, 17.4, 17.8, 18.4, 17.1, 17, 16.3, 16.5, 17, 18.9, 21.3, 22.2, 23.3, 24.2, 21.7, 18.3, 17.7, 20.2],
                precipitation: [1.3, 11.7, 0.2, 0, 1.1, 0.3, 0.2, 0, 8.5, 0.1, 0, 6.5, 8.1, 6.3, 5, 2.7, 3.3, 1.7, 1.3, 0.7, 0, 0, 0, 0, 0, 0, 0, 8.9, 0.2, 0, 6]
            },
            '8': {
                temperature: [16.5, 16, 17.2, 16.1, 14.3, 14.8, 14.1, 14, 13.3, 13.7, 15.5, 17.4, 16.9, 14.7, 16.2, 14.8, 14, 13.4, 13.4, 13.3, 15.5, 18.3, 16.2, 15.7, 15.3, 16.1, 15.2, 15.1, 15.1, 14.3],
                precipitation: [0, 0.2, 0.3, 6.4, 0.5, 3.7, 2.4, 0, 0, 0, 5.8, 0, 0, 0, 0, 5.4, 0, 0, 0, 0, 0, 3.1, 3.4, 11.4, 5.1, 15.4, 4.3, 7.8, 28.6, 2.6]
            },
            '9': {
                temperature: [15, 11.6, 12, 10.9, 10.4, 9.4, 10.1, 14, 11.7, 12.5, 14.8, 13, 15.8, 14.4, 14.8, 13, 13.3, 12.6, 12.3, 11.6, 12.1, 11.6, 11.3, 14.3, 13.8, 15.9, 10.7, 9.7, 8.2, 6.2, 4.7],
                precipitation: [17.6, 1.3, 1.3, 7.6, 0, 14, 0.5, 4.4, 6.9, 0.3, 7.4, 7.4, 2.3, 2.6, 2.4, 7.1, 1.6, 5.2, 1.2, 0.8, 4.5, 0.1, 0.2, 0.3, 0.6, 2.2, 1.2, 0.1, 0, 0, 0]
            },
            '10': {
                temperature: [8.3, 12.7, 10.2, 9.7, 9, 8.5, 7.3, 6.1, 6.9, 3.9, 5.9, 5.6, 6.6, 5.1, 4.3, 4.7, 4.8, 7, 5.7, 1.9, 2.9, 5.5, 5.9, 6.3, 8, 9.7, 9.7, 9.1, 6.4, 3.9],
                precipitation: [2.7, 5.5, 5.7, 0.1, 0.8, 0.5, 6.4, 0, 0.3, 0, 1.8, 0.4, 1.7, 1.8, 0, 0, 0, 3, 1.9, 0, 0, 0, 0.1, 0, 0.2, 1.2, 9.7, 12, 0, 0]
            },
            '11': {
                temperature: [1.6, 6.1, 5.8, 2.4, 4, 8.3, 8.6, 8.7, 6.9, 5.8, 6.8, 4.6, 5, 6, 7.1, 6.7, 9.2, 6.6, 10.5, 10.3, 7.8, 7.8, 7.4, 7.4, 6.8, 5.1, 3.6, 1.7, 1.9, 4.9, 5],
                precipitation: [0, 0.2, 0, 0, 0.3, 11.8, 0.4, 5.4, 3, 0, 2, 0.8, 7.2, 5.2, 7.5, 2.4, 3.4, 0.2, 0.6, 3.9, 0.8, 7.2, 0.4, 6.4, 1.8, 2, 0.3, 0, 0, 0, 0]
            }
        };
        const result = yield monthCalculator.calculateTempurature(input);
        const expectedResponse = {
            "0": 3.9, "1": 6.1, "10": 6.7, "11": 6.1, "2": 7.6, "3": 10.4, "4": 11.4, "5": 17.6, "6": 18.5, "7": 18.7, "8": 15.2, "9": 12,
        };
        expect(result).toEqual(expectedResponse);
    }));
});
describe('calculatePrecipitation', () => {
    it('should return average temperature per month', () => __awaiter(void 0, void 0, void 0, function* () {
        const input = {
            '0': {
                temperature: [7.8, 5.8, 5, 5.7, 7.5, 5.6, 6.9, 7.1, 5, 3.9, 7.2, 7, 8.4, 5.4, 6.4, 6.7, 4.3, 1.6, -0.5, -1.9, -0.3, -0.9, -0.8, -1.4, 0.9, 6.8, 5.7, 4.2, 1.8, 0.7, 0.8],
                precipitation: [0, 0, 0, 0, 0, 0, 0.9, 1.9, 0, 1.3, 0, 2.9, 3.8, 1.1, 0, 4.2, 2.5, 0, 0, 0, 0, 3.2, 0, 0, 1.5, 1, 7.5, 2.6, 0.2, 1.3, 0]
            },
            '1': {
                temperature: [1.3, 1.5, 2.3, 2, 4.7, 5.4, 7.6, 7.4, 7.8, 6.3, 5.5, 5.7, 6.4, 5.3, 6, 6.6, 7.3, 7.1, 6.9, 7.2, 7.5, 9, 7.4, 5.7, 7.1, 7.9, 7.8, 7.9],
                precipitation: [1, 3.7, 0, 2.4, 0, 5.6, 5.2, 3.5, 1, 22.9, 0.3, 0, 0, 0, 0, 0, 0, 0.1, 0.3, 0, 2, 0, 0, 0, 0, 0, 0, 0.5]
            },
            '2': {
                temperature: [6.3, 7.8, 10.4, 8, 6.6, 8.7, 8.4, 7.2, 8, 5.2, 5.2, 5.9, 7.2, 7.5, 8.8, 9, 6.9, 5.7, 5.6, 8.7, 9.1, 8, 7.9, 5.9, 7.2, 7, 7.6, 8.9, 8.6, 9.8, 7.7],
                precipitation: [0.5, 0, 6.5, 10.5, 0.9, 4.5, 15.6, 1.5, 5.9, 14, 0.6, 5.8, 6.4, 10.5, 3.5, 4.5, 5.4, 0.8, 0.2, 0, 0, 0, 0, 0, 0.8, 0.1, 0, 0.2, 0, 0, 0]
            },
            '3': {
                temperature: [6.9, 9.5, 6.8, 6.5, 7.2, 9.5, 13, 12.5, 8.7, 5.8, 5.9, 5.4, 3.9, 5.3, 9, 10.9, 12.1, 14.4, 15.4, 15.6, 14.4, 16.3, 15.6, 16.7, 12.8, 11.9, 10, 9.7, 9.8, 10.3],
                precipitation: [0, 6.8, 2.5, 0, 0, 0.3, 1.2, 0, 0, 0, 0, 0.2, 0.6, 0.2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 6.6, 0.6, 0.5, 4.6, 5.6, 0.7, 0]
            },
            '4': {
                temperature: [9.3, 10.1, 7.9, 7.1, 7.7, 8, 8.9, 9.6, 11.5, 10, 9.2, 9.3, 9.1, 10.3, 11.4, 11.4, 12.2, 13.7, 13.4, 13, 11.7, 12.7, 14.4, 13.9, 12.7, 15.3, 13.7, 11.9, 13, 15.9, 16.2],
                precipitation: [0, 3.3, 1, 0.9, 0.2, 1.6, 0.7, 7.5, 2.3, 1, 0, 0.5, 0, 0, 0, 0.1, 0, 2.4, 0.4, 0, 0, 0, 0, 0, 0, 3.7, 0, 9, 0, 0.1, 0]
            },
            '5': {
                temperature: [17.6, 21.6, 16.2, 18.1, 16.4, 14.2, 16.1, 14.5, 14.9, 16.8, 14.6, 14.1, 14.8, 16.9, 15.9, 16.3, 18.5, 19, 18.3, 16.1, 15.3, 16, 21.3, 24.4, 25, 18.1, 16, 17.4, 22.5, 20],
                precipitation: [0, 0, 0, 13.5, 10.3, 20, 3.4, 6.7, 0.6, 6.6, 1.2, 15.5, 2.2, 0.3, 11.1, 1.4, 0.1, 0, 13.7, 5.9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            },
            '6': {
                temperature: [17.5, 16.5, 15.4, 16, 17.3, 16.3, 14.9, 14.4, 15.1, 15.4, 17.8, 16.8, 16.3, 15.6, 15.5, 15.9, 17.8, 18.3, 18.5, 19.3, 18.3, 19.6, 23.1, 25.2, 27.4, 27.5, 22.6, 20, 19.5, 21.6, 18.4],
                precipitation: [0, 0, 0, 0, 0, 3.1, 0.3, 0.1, 0, 2.4, 2.8, 6.3, 1.4, 0.3, 0, 0, 0, 4, 1.4, 7.8, 0, 0.2, 0, 0, 0, 1.2, 0.9, 3.2, 0, 0, 4.8]
            },
            '7': {
                temperature: [18.3, 18.2, 18.1, 19.3, 20, 19.2, 18.7, 18.6, 20, 19.8, 18.2, 16.5, 14.8, 16.2, 17.4, 17.8, 18.4, 17.1, 17, 16.3, 16.5, 17, 18.9, 21.3, 22.2, 23.3, 24.2, 21.7, 18.3, 17.7, 20.2],
                precipitation: [1.3, 11.7, 0.2, 0, 1.1, 0.3, 0.2, 0, 8.5, 0.1, 0, 6.5, 8.1, 6.3, 5, 2.7, 3.3, 1.7, 1.3, 0.7, 0, 0, 0, 0, 0, 0, 0, 8.9, 0.2, 0, 6]
            },
            '8': {
                temperature: [16.5, 16, 17.2, 16.1, 14.3, 14.8, 14.1, 14, 13.3, 13.7, 15.5, 17.4, 16.9, 14.7, 16.2, 14.8, 14, 13.4, 13.4, 13.3, 15.5, 18.3, 16.2, 15.7, 15.3, 16.1, 15.2, 15.1, 15.1, 14.3],
                precipitation: [0, 0.2, 0.3, 6.4, 0.5, 3.7, 2.4, 0, 0, 0, 5.8, 0, 0, 0, 0, 5.4, 0, 0, 0, 0, 0, 3.1, 3.4, 11.4, 5.1, 15.4, 4.3, 7.8, 28.6, 2.6]
            },
            '9': {
                temperature: [15, 11.6, 12, 10.9, 10.4, 9.4, 10.1, 14, 11.7, 12.5, 14.8, 13, 15.8, 14.4, 14.8, 13, 13.3, 12.6, 12.3, 11.6, 12.1, 11.6, 11.3, 14.3, 13.8, 15.9, 10.7, 9.7, 8.2, 6.2, 4.7],
                precipitation: [17.6, 1.3, 1.3, 7.6, 0, 14, 0.5, 4.4, 6.9, 0.3, 7.4, 7.4, 2.3, 2.6, 2.4, 7.1, 1.6, 5.2, 1.2, 0.8, 4.5, 0.1, 0.2, 0.3, 0.6, 2.2, 1.2, 0.1, 0, 0, 0]
            },
            '10': {
                temperature: [8.3, 12.7, 10.2, 9.7, 9, 8.5, 7.3, 6.1, 6.9, 3.9, 5.9, 5.6, 6.6, 5.1, 4.3, 4.7, 4.8, 7, 5.7, 1.9, 2.9, 5.5, 5.9, 6.3, 8, 9.7, 9.7, 9.1, 6.4, 3.9],
                precipitation: [2.7, 5.5, 5.7, 0.1, 0.8, 0.5, 6.4, 0, 0.3, 0, 1.8, 0.4, 1.7, 1.8, 0, 0, 0, 3, 1.9, 0, 0, 0, 0.1, 0, 0.2, 1.2, 9.7, 12, 0, 0]
            },
            '11': {
                temperature: [1.6, 6.1, 5.8, 2.4, 4, 8.3, 8.6, 8.7, 6.9, 5.8, 6.8, 4.6, 5, 6, 7.1, 6.7, 9.2, 6.6, 10.5, 10.3, 7.8, 7.8, 7.4, 7.4, 6.8, 5.1, 3.6, 1.7, 1.9, 4.9, 5],
                precipitation: [0, 0.2, 0, 0, 0.3, 11.8, 0.4, 5.4, 3, 0, 2, 0.8, 7.2, 5.2, 7.5, 2.4, 3.4, 0.2, 0.6, 3.9, 0.8, 7.2, 0.4, 6.4, 1.8, 2, 0.3, 0, 0, 0, 0]
            }
        };
        const result = yield monthCalculator.calculatePrecipitation(input);
        const expectedResponse = {
            "0": 1.2, "1": 1.7, "10": 1.9, "11": 2.4, "2": 3.2, "3": 1, "4": 1.1, "5": 3.8, "6": 1.3, "7": 2.4, "8": 3.5, "9": 3.3,
        };
        expect(result).toEqual(expectedResponse);
    }));
});
//# sourceMappingURL=monthCalculator.test.js.map